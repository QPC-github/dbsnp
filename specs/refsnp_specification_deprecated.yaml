definitions:

  refsnp_snapshot:
    type: object
    required: [ refsnp_id, create_date, last_update_date, last_update_build_id,
       dbsnp1_merges, lost_obs_movements, present_obs_movements, citations ]
    description: >-
      The characteristics of a single group of short variants equivalent by
      type and position over several sequences as calculated based on the
      information available at a particular point in time. It is a snapshot at
      a particular point in time of the ever-evolving knowledge of a particular
      class of variants.
      Has 4 subclasses primary_snapshot, merged_snapshot, unsupported_snapshot,
      and nosnppos_snapshot (deprecated).
      They are each represented by an instance of this object with the appropriate data field (primary_snapshot_data,
      merged_snapshot_data, unsupported_snapshot or nosnppos_snapshot_data) filled
      in. It is an error to have more than one of these filled in (though our C++ code generator cannot parse the YAML necessary
      to specify this constraint, so we do not enforce it).
    properties:
      refsnp_id:
        type: string
        format: uint64
        description: >-
          A 64 bit positive integer that is uniquely and forever assigned to
          this RefSNP object.
      create_date:
        type: string
        format: ISO 8601
        description: >-
          The date the RefSNP was created.
        example: >-
          2001-01-15T00:00Z
      last_update_date:
        type: string
        format: ISO 8601
        description: >-
          The date the RefSNP was last updated.
          Same as create date if never updated.
        example: >-
          2001-01-15T00:00Z
      last_update_build_id:
        type: string
        format: ascii
        description: >-
          The id of the last dbSNP build in which this RefSNP was created or updated.
      dbsnp1_merges:
        type: array
        description: >-
          Note: this field is for dbsnp1 merge only.
          Record of each time another RefSNP objects merged into this RefSNP
          because the RsAnchors of each were the same.  If the recipient of
          a merge then merges into yet a third RefSNP, the list is flattened.
        items:
          $ref: '#/definitions/dbsnp1_merge_event'
      citations:
        type: array
        description: >-
          Set of Pubmed IDs (PMIDs) for this RefSNP or its supporting submissions
        items:
          type: integer
      lost_obs_movements:
        type: array
        description: >-
          movements recording observations lost between the previous release
          and this release
        items:
          $ref: '#/definitions/lost_obs_movement'
      present_obs_movements:
        type: array
        description: >-
          The record of movements between the previous and current release for observations
          mapped to this RS by the ADS used in this release.
        items:
          $ref: '#/definitions/present_obs_movement'
      nosnppos_snapshot_data:
        $ref: '#/definitions/nosnppos_snapshot_data'
      withdrawn_snapshot_data:
        $ref: '#/definitions/withdrawn_snapshot_data'
      primary_snapshot_data:
        $ref: '#/definitions/primary_snapshot_data'
      merged_snapshot_data:
        $ref: '#/definitions/merged_snapshot_data'
      unsupported_snapshot_data:
        $ref: '#/definitions/unsupported_snapshot_data'

  merged_snapshot_data:
    description: >-
      Data specific to merged snapshots; cannot be present at the same time as
      primary_snapshot_data or nosnppos_snapshot_data
    type: object
    required: [ proxy_time, proxy_build_id, merged_into ]
    properties:
      proxy_time:
        type: string
        format: ISO 8601
        description: >-
          The date and time this RefSnp was merged
        example: >-
          2001-01-15T00:00Z
      proxy_build_id:
        type: string
        format: ascii
        description: >-
          The number of the dbSNP build in which this RefSnp was merged
      merged_into:
        type: array
        description: >-
          The RefSnp id(s) that this RefSnp was merged into. In dbsnp1 a RefSnp can
          only be merged into one RefSnp; however in dbsnp2 it is possible to merge
          into multiple RefSnps
        items:
          type: string
          description: >-
            The RefSnp id that the current RefSnp was merged into

  withdrawn_snapshot_data:
    description: >-
      Data specific to withdrawn snapshots;
    type: object
    required: [ withdrawn_time, support]
    properties:
      withdrawn_time:
        type: string
        format: ISO 8601
        description: >-
          The date and time this RefSnp was withdrawn
        example: >-
          2001-01-15T00:00Z
      support:
        type: array
        description: >-
          The observations that support the existence of a variant at
          this particular location and type. Supporting observations can come from
          submissions to dbSNP or from external data sources like ClinVar.
        items:
          $ref: '#/definitions/support'

  nosnppos_snapshot_data:
    description: >-
      Data specific to nosnppos snapshots;
    type: object
    required: [ support ]
    properties:
      support:
        type: array
        description: >-
          The observations that support the existence of a variant at
          this particular location and type. Supporting observations can come from
          submissions to dbSNP or from external data sources like ClinVar.
        items:
          $ref: '#/definitions/support'

  unsupported_snapshot_data:
    description: >-
      Data specific to unsupported snapshots; cannot be present at the same time as the other *_snapshot_data fields
    type: object
    required: [ alleles_from_previous_support ]
    properties:
      alleles_from_previous_support:
        type: array
        description: >-
          The set of alleles that this RefSnp had in the build just prior to becoming unsupported.
        items:
          $ref: '#/definitions/spdi'


  primary_snapshot_data:
    description: >-
      Data specific to primary snapshots; cannot be present at the same time as
      merged_snapshot_data or nosnppos_snapshot_data
    type: object
    required: [ placements_with_allele, allele_annotations,
      support, anchor, variant_type ]
    properties:
      placements_with_allele:
        type: array
        description: >-
         List of all placements, each containing a list of the alleles
         in the context of that reference region. Includes both nucleotide
         and protein placements.

         For all placements, the list of alleles is the same length and in the same
         order.  They represent the alleles on the preferred, top level
         placeemnt (PTLP) in sorted order.  So, on a given placement, the first
         allele is how the first allele on the PTLP appears upon mapping to
         the given placement.  Similarly for the second allele, and so on.
        items:
          $ref: '#/definitions/placement_with_allele'
      allele_annotations:
        type: array
        description: >-
         Each element holds the annotations associated with a particular variant

         This list of annotation lists has the same order and length as the list
         of alleles in each placement. This order associates each allele
         with its corresponding annotation list.  If an allele was not associated
         with any annotations, the corresponding annotation set will have only empty
         lists.
        items:
          $ref: '#/definitions/allele_annotation_list'
      support:
        type: array
        description: >-
          The observations that support the existence of a variant at
          this particular location and type. Supporting observations can come from
          submissions to dbSNP or from external data sources like ClinVar.
        items:
          $ref: '#/definitions/support'
      anchor:
        type: string
        format: ascii
        description: >-
          The location and type of the variant, in format
          'Acc.Ver:From:DeletionLength:Type',
          which defines the RefSNP.  The Acc.Ver is the preferred top level
          placement chosen from all of the placements the RefSNP maps to in a given
          alignment data set.  There is a 1:1 relationship between live RefSNP
          objects and the set of anchors.
      variant_type:
        type: string
        format: ascii
        description: >-
          The type of change the variant causes, relative to the reference sequence.
        enum:
          - snv
          - mnv
          - ins
          - del
          - delins
          - identity

  dbsnp1_merge_event:
    type: object
    required: [merged_rsid, revision, merge_date]
    description: >-
      Record of one RefSNP merging into another.

      Due to curatorial changes or a change in input alignment data sets,
      a RefSNP may change anchor such that it now coincides with
      second RefSNP.  Only one 'live' RefSNP is allowed at a given anchor.
      To resolve this conflict, dbSNP chooses one RefSNP as 'live',
      and merges the data from the other RefSNP into it.  DbSNP gives preference
      to the clinical RefSNP and if that is not sufficient it chooses the oldest
      RefSNP, the one with the lowest ID.
    properties:
      merged_rsid:
        type: string
        format: uint64
        description: >-
          The RefSNP ID of the RefSNP object that was merged into the now live RefSNP
      revision:
        type: string
        format: ascii
        description: >-
          The revision in which the merge took place
      merge_date:
        type: string
        format: ISO 8601
        description: >-
          The date and time the RefSNP was merged.
        example: >-
          2001-01-15T00:00Z

  lost_obs_movement:
    type: object
    required: [component_ids, observation, allele_in_cur_release, rsids_in_cur_release, allele_in_prev_release]
    description: >-
      For recording the movement of an observation that was in this rs in the previous
      release, but no longer in the current.
    properties:
      component_ids:
        type: array
        description: >-
          DbSnpIds of the supporting data where this particular observation is found:
          SubSnpId, ClinVarSnpId, etc
        items:
          $ref: "#/definitions/support_id"
      observation:
        description: >-
          The actual read at a particular location on a particular version of a sequence
        $ref: "#/definitions/spdi"
      allele_in_cur_release:
        description: >-
          The cannonical allele SPDI produced by mapping this observation to it's PTLP.
          When the observation is suppressed this may be interpreted as the allele it
          would have been mapped to had it not been suppressed.
        $ref: "#/definitions/spdi"
      rsids_in_cur_release:
        type: array
        description: >-
          The ids of the RefSnps that contain this observation in the current release.
          Only identity alleles can belong to more than one RefSnp, so this can only
          have more than one entry if the observation maps to the identity allele. If
          empty then this observation no longer is associated with any id (which can
          only occur if it is suppressed or withdrawn (or if there is a bug)).
        items:
          type: string
          format: uint64
      allele_in_prev_release:
        description: >-
          The spdi that was the canonical allele for this observation in the previous
          release. It is not guaranteed that it remains canonical in this release,
          thus the type is ContextualSpdi.
        $ref: "#/definitions/spdi"

  present_obs_movement:
    type: object
    required: [component_ids, observation, allele_in_cur_release, other_rsids_in_cur_release, last_added_to_this_rs]
    description: >-
      For recording the movement of an observation in the current rs for the current release.
    properties:
      component_ids:
        type: array
        description: >-
          DbSnpIds of the supporting data where this particular observation is found:
          SubSnpId, ClinVarSnpId, etc
        items:
          $ref: "#/definitions/support_id"
      observation:
        description: >-
          The actual read at a particular location on a particular version of a sequence
        $ref: "#/definitions/spdi"
      allele_in_cur_release:
        description: >-
          The cannonical allele SPDI produced by mapping this observation to it's PTLP.
          When the observation is suppressed this may be interpreted as the allele it
          would have been mapped to had it not been suppressed.
        $ref: "#/definitions/spdi"
      other_rsids_in_cur_release:
        type: array
        description: >-
          The RSIDs of any other RefSnps that contain this observation in the
          current release. Can only be non-empty for the identity allele.
        items:
          type: string
          format: uint64
      previous_release:
        description: >-
          If absent, this observation wasn't part of an RS last release i.e. it is a
          new submission  or was just unsuppressed (or there is a bug)
        $ref: "#/definitions/previous_release"
      last_added_to_this_rs:
        type: string
        format: ascii
        description: >-
          The most recent release in which this observation started being associated
          with this RSID. If the historical membership for this observation is
          release1:rs1 release2:rs2 release3:rs1 release4:rs1, this will hold "release3".

          Note that because of a change to dbSNP data model between build 151 and 152,
          if the most recent release is prior to 152 then the observation may have been added to
          this rs before the build listed. For example, if it says 140, it is possible that
          it was really added in 130. But it cannot have been added after build 140. If it
          says 152, then it was last added in build 152 and not before or after that.

  previous_release:
    type: object
    description: >-
      The characteristics of an observation that allow one to find it in the previous
      release. Should only be used when the observation described was present in the
      previous release.
    required: [allele, rsids]
    properties:
      allele:
        description: >-
          The spdi that was the canonical allele for this observation in the previous
          release. It is not guaranteed that it remains canonical in this release, thus
          the type is ContextualSpdi.

          Note that because of a change to dbSNP data model between build 151 and 152,
          this field is not valid in build 152. It will be valid for build 153 and later.
          In build 152 it contains an arbitrary allele and only preserves the previous
          association between the observations in SubSNPs and their 1.0 RefSNPs.
        $ref: "#/definitions/spdi"
      rsids:
        type: array
        description: >-
          The ids of the RefSnps that contained a particular observation in the previous
          release. Only identity alleles can belong to more than one RefSnp, so this can
          only have more than one entry if the observation maps to the identity allele.
          The PreviousRelease struct should only be used when the observation was present
          in the previous release, so this field should not be empty.
        items:
          type: string
          format: uint64

  placement_with_allele:
    type: object
    required: [seq_id, is_ptlp, placement_annot, alleles]
    description: >-
      For nucleotide placements, each allele in this placement is stored as a SPDI.
      Each SPDI contains a reference sequence identifier.  For the set of alleles
      in SPDI syntax, they must all have the same reference sequence identifier,
      that matches the seq_id attribute.

      For protein placements, the allele is either in SPDI syntax, or gives a general
      description of a frameshift.
    properties:
      seq_id:
        type: string
        format: ascii
        description: >-
          The RefSeq/Genbank Accession.Version for the reference sequence
      is_ptlp:
        type: boolean
        description: >-
          True if this placement is the preferred top level placement (PTLP)
          under the alignment data set which generated this RefSnp cluster
      placement_annot:
        $ref: '#/definitions/placement_annot'
      alleles:
        type: array
        description: >-
          A RefSnp can describe 1 to N alleles.

          While for the PTLP, all alleles (in SPDI syntax) are the same type
          and length, non-PTLP Placements (i.e. all other Placements), the allele
          in SPDI syntax may have different types, lengths and start positions,
          and in some rare cases, may not even overlap. But they are all on
          this placement's Sequence.
        items:
          $ref: '#/definitions/placement_annotated_allele'

  placement_annot:
    type: object
    required: [seq_type, mol_type, seq_id_traits_by_assembly,
      is_aln_opposite_orientation, is_mismatch]
    description: >-
      Annotation about this sequence
    properties:
      seq_type:
        type: string
        format: ascii
        description: >-
          The associated sequence's type
        enum:
          - refseq_chromosome
          - refseq_contig
          - gpipe_chromosome
          - contig
          - refseq_genomic
          - refseq_mrna
          - refseq_mrna_pred
          - mrna
          - refseq_ncrna
          - refseq_ncrna_pred
          - ncrna
          - refseq_prot
          - genbank
          - embl
          - ddbj
      mol_type:
        type: string
        format: ascii
        description: >-
          The associated sequence's molecule type
        enum:
          - unknown
          - genomic
          - rna
          - protein
          - mitochondrion
          - nucleic_acid
      seq_id_traits_by_assembly:
        type: array
        description: >-
          The relationships between this sequence and the genomic assemblies in which
          it participates (if any)
        items:
          $ref: '#/definitions/seq_id_trait_by_assembly'
      is_aln_opposite_orientation:
        type: boolean
        description: >-
          True if this sequence is aligned reverse to the PTLP sequence.  Thus,
          the PTLP sequence's is_aln_opposite_orientation attribute is always
          false.
      is_mismatch:
        type: boolean
        description: >-
          True if this sequence's residues are different than the PTLP
          sequence at this locus.  Thus, the PTLP sequence's is_mismatch
          attribute is always false.

  placement_annotated_allele:
    type: object
    required: [allele, hgvs]
    description: >-
      Description of a particular allele on a paritcular sequence.
    properties:
      allele:
        $ref: '#/definitions/allele'
      hgvs:
        type: string
        format: ascii
        description: >-
          The HGVS expression for this allele on this placement

  seq_id_trait_by_assembly:
    type: object
    required: [assembly_name, assembly_accession, is_top_level, is_alt, is_patch, is_chromosome]
    description: >-
      Sequences in general and contigs and chromosomes in particular
      may have different roles in different genomic assemblies. This object
      describes the role of a sequence in a particular assembly.
    properties:
      assembly_name:
        type: string
        format: unicode
        description: >-
          The name of the assembly these traits reference
      assembly_accession:
        type: string
        format: ascii
        description: >-
          The Genomic Collections accession for this assembly.  For more information,
          see, for example, http://www.ncbi.nlm.nih.gov/assembly/GCF_000001405.38/
      is_top_level:
        type: boolean
        description: >-
          True if the sequence is top-level (the most highly assembled sequences
          in a genome assembly).
      is_alt:
        type: boolean
        description: >-
          True if this placement's sequence is an alternative loci (a sequence
          that provides an alternate representation of a locus found in a
          largely haploid assembly)
      is_patch:
        type: boolean
        description: >-
          True if this placement's sequence is a patch sequence (a contig
          sequence that is released outside of the full assembly release cycle.
          These sequences are meant to add information to the assembly without
          disrupting the stable coordinate system)
      is_chromosome:
        type: boolean
        description: >-
          True if this placement's sequence is a chromosome sequence (a relatively
          complete pseudo-molecule assembled from smaller sequences (components)
          that represent a biological chromosome)

  allele:
    type: object
    description: >-
      An allele object describes the sequence change in either nucleotide or
      amino acid sequence at a particular position on a particular sequence. Exactly
      one of the spdi and frameshift fields will be present.

      Most alleles can be modeled as defined breakpoint changes (SPDI data model).
      However, indel nucleotide changes can create frameshift changes in proteins,
      which are difficult to model this way. Therefore this allele object is a
      choice between either a SPDI representation (when the breakpoints are known)
      or protein frameshifts (where the final breakpoint is not known).
    properties:
      spdi:
        $ref: '#/definitions/spdi'
      frameshift:
        $ref: '#/definitions/frameshift'

  frameshift:
    type: object
    description: >-
      A length poloymorphism in a nucleotide sequence, that coincides with an open
      reading frame, produces a frameshift in protein sequence.
    required: [ seq_id, position ]
    properties:
      seq_id:
        type: string
        format: ascii
        description: >-
          The RefSeq/Genbank Accession.Version for the protein reference sequence
        example: >-
          NP_000198.1
      position:
        type: integer
        description: >-
          The 0-based boundary position where the frameshift starts. That
          is, position 0 starts the frameshift immediately before
          the first amino acid and position 1 starts the frameshift
          between the first and second amino acid.

  so_term:
    type: object
    description: >-
      Nucleotide and amino acid changes are catagorized into Sequence Ontology
      terms.  For more information, see
      https://www.ncbi.nlm.nih.gov/variation/docs/glossary/
    required: [ name, accession ]
    properties:
      name:
        type: string
        format: unicode
        description: >-
          The name of the SO-term
        example: >-
          insertion
      accession:
        type: string
        format: ascii
        description: >-
          The accession of the SO-term
        example: >-
          SO:0000667

  support:
    type: object
    required: [id, revision_added, create_date, submitter_handle]
    description: >-
      Record of a submission that supports this RefSNPs.  RefSNPs are
      insantiated when a variant submission exists at the RefSNP's
      location and type (aka anchor).
    properties:
      id:
        $ref: '#/definitions/support_id'
      revision_added:
        type: string
        format: ascii
        description: >-
          The revision in which this support was added to this RefSNP
      create_date:
        type: string
        format: ISO 8601
        description: >-
          The date this support was added to this RefSNP
        example: >-
          2001-01-15T00:00Z
      submitter_handle:
        type: string
        format: unicode
        description: >-
          The unique, dbSNP-registered name of the submitter

  support_id:
    type: object
    required: [type, value]
    description: >-
      The id of the variant that supports this RefSNP.
    properties:
      type:
        type: string
        format: ascii
        description: >-
          The kind of supporting data. This list can expand.
        enum:
          - subsnp
          - frequency
          - clinvar
      value:
        type: string
        format: unicode
        description: >-
          The submitted variant ID. The id's structure is determined by its source.
        example:
          - SubSNP: ss12345
          - ClinVar: 12345
          - Frequency: '1000 Genomes Phase III'

  allele_annotation_list:
    type: object
    required: [frequency, clinical, submissions, assembly_annotation]
    description: >-
      Clinical, frequency, and submission information that apply to a particular
      allele independent of its placement.
    properties:
      frequency:
        type: array
        description: >-
          Selected frequency attributes for each large genotype/frequency study
          (if any) in which the allele has been reported.  One frequency_data object
          per study.
        items:
          $ref: '#/definitions/frequency_data'
      clinical:
        type: array
        description: >-
          Select clinical attributes for each NCBI ClinVar RCV of which this
          allele is a member.
        items:
          $ref: '#/definitions/clinvar_data'
      submissions:
        type: array
        description: >-
          The particular SubSNP ids that support this allele are reported here
        items:
          type: string
          format: uint64
          description: >-
            SubSNP Ids
      assembly_annotation:
        type: array
        description:
          For this particular allele, the set of Annotation Releases and associated
          sequences for which Genes, RNAs and Coding Regions are annotated.
        items:
          $ref: '#/definitions/assembly_annot_for_allele'

  assembly_annot_for_allele:
    type: object
    description: >-
      NCBI Annotation Releases calculate Gene, RNA and Coding Regions on
      top level assembly sequence molecules.  Sometimes, a sequence molecule
      may have more than one Annotation Release associated with it.  We report
      the effect of the variant in relation to these regions *per* Annotation
      Release *and* Sequence-id pair.
      A tuple is then associated with a tree of annotations, consisting of
      genes, their directly associated RNAs and Protein products, and any protein
      products associated with those RNAs.
    required: [seq_id, annotation_release, genes]
    properties:
      seq_id:
        type: string
        format: ascii
        description: >-
          The RefSeq/Genbank Accession.Version for the reference sequence
      annotation_release:
        type: string
        format: ascii
        description: >-
          The name of the annotation release
      genes:
        type: array
        description: >-
          The set of genes annotated on the associated assembly
          and sequence, for which this allele overlaps.
        items:
          $ref: '#/definitions/gene_annot_for_allele'

  gene_annot_for_allele:
    type: object
    description: >-
      Each Gene consists of a tree of RNAs and Coding Regions (Proteins)
      and associated SO-terms
    required: [name, id, locus, is_pseudo, orientation, sequence_ontology, rnas]
    properties:
      name:
        type: string
        format: ascii
        description: >-
          The name of the Gene
      id:
        type: integer
        description: >-
          The NCBI GeneId
      locus:
        type: string
        format: ascii
        description: >-
          The NCBI Gene Symbol
        example: >-
          BRCA1
      is_pseudo:
        type: boolean
        description: >-
          True, if the gene is labeled a Pseudo-gene by NCBI Gene Resource at
          the time this revision is built.
      orientation:
        type: string
        description: >-
          The orientation of the gene relative to the parent assembly sequence
          upon which it is annotated.  This orientation applies to all children
          RNAs and Proteins as well
        enum:
          - plus
          - minus
      sequence_ontology:
        type: array
        description: >-
          The description of the variant in respect to its
          location relative to this gene
        items:
          $ref: '#/definitions/so_term'
      rnas:
        type: array
        description: >-
          The set of RNAs annotated on this gene.  In the case of mitochondria,
          the chromosome coordinate is repeated, as it is the stand-in
          for the RNA
        items:
          $ref: '#/definitions/rna_annot_for_allele'

  rna_annot_for_allele:
    type: object
    description: >-
      Represents the manifestation of a particular allele on a particular RNA
      If product_id is absent, this is a non-coding RNA
    required: [id, sequence_ontology]
    properties:
      id:
        type: string
        format: ascii
        description: >-
          The RefSeq/Genbank Accession.Version for the reference sequence
        example: >-
          NC_000001.23
      codon_aligned_transcript_change:
        $ref: '#/definitions/codon_aligned_transcript_change'
      sequence_ontology:
        type: array
        description: >-
          The description of the variant in respect to its
          location relative to this RNA
        items:
          $ref: '#/definitions/so_term'
      product_id:
        type: string
        format: ascii
        description: >-
          The RefSeq/Genbank Accession.Version for the reference sequence
        example: >-
          NC_000001.23
      protein:
        $ref: '#/definitions/protein_annot_for_allele'

  protein_annot_for_allele:
    type: object
    description: >-
      Represents the manifestation of a particular allele on a particular protein
    required: [variant, sequence_ontology]
    properties:
      variant:
        $ref: '#/definitions/protein_variant'
      sequence_ontology:
        type: array
        description: >-
          The description the protein consequence of this variant
        items:
          $ref: '#/definitions/so_term'

  protein_variant:
    type: object
    description: >-
      A choice of either a protein change with known endpoints (spdi) or
      a frameshift variant (frameshift)
    properties:
      spdi:
        $ref: '#/definitions/spdi'
      frameshift:
        $ref: '#/definitions/frameshift'

  frequency_data:
    type: object
    description: >-
      Metadata and allele counts for an allele in a particular study/project.
    required: [study_name, study_version, local_row_id, observation, allele_count, total_count]
    properties:
      study_name:
        type: string
        format: unicode
        description: >-
          Name part of study_id
        example: >-
          ExAC
      study_version:
        type: integer
        description: >-
          Version part of study_id
        example:
          1
      local_row_id:
        type: integer
        description: >-
          Row number id within submission
        example:
          1
      observation:
        $ref: "#/definitions/spdi"
      allele_count:
        type: integer
        description: >-
          The number of chromosomes in the study where this allele was observed
      total_count:
        type: integer
        description: >-
          The number of chromosomes in the study

  clinvar_data:
    type: object
    description: >-
      Metadata and clinical attributes for an allele in the ClinVar database.  For
      more information about ClinVar's data model, and ClinVar SCV/RCV accessions, see
      http://www.ncbi.nlm.nih.gov/clinvar/docs/help/
    required: [accession_version, allele_id, measure_set_id, variant_identifiers,
      refsnp_id, create_date, update_date, review_status, disease_names,
      clinical_significances, disease_ids, origins, collection_method,
      citations, gene_ids]
    properties:
      accession_version:
        type: string
        format: ascii
        description: >-
          The ClinVar RCV record that links this particular
          allele to this particular phenotype.  For more information, see
          http://www.ncbi.nlm.nih.gov/clinvar/intro/
      allele_id:
        type: integer
        description: >-
          ClinVar's identifier for this allele.  For more information, see
          http://www.ncbi.nlm.nih.gov/clinvar/docs/help/
      measure_set_id:
        type: integer
        description: >-
          ClinVar's identifer for a set of variants that may influence the
          phenotype together, such as in a haplotype.  A measure-set aggregates
          together several allele_ids
      variant_identifiers:
        type: array
        description: >-
          External variant identifers, simliar to RS numbers.  They are
          independent of RCV's altogether.  They should be the same for every
          RCV in a RefSnp.  Formerly 'source-link'.
        items:
          $ref: '#/definitions/external_ref'
      refsnp_id:
        type: string
        format: uint64
        description: >-
          The associated RefSnp ID according to ClinVar at time of dbSNP
          revision creation.
      create_date:
        type: string
        format: ISO 8601
        description: >-
          The date and time the ClinVar RCV was created
        example: >-
          2001-01-15T00:00Z
      update_date:
        type: string
        format: ISO 8601
        description: >-
          The date the ClinVar RCV was last updated. If never updated,
          then same as create-date.
        example: >-
          2001-01-15T00:00Z
      last_evaluated_date:
        type: string
        format: ISO 8601
        description: >-
          The date the submitter last evaluated the clinical significance for
          this record.  If absent, then value not submitted by submitter.
        example: >-
          2001-01-15T00:00Z
      review_status:
        type: string
        format: ascii
        description: >-
          The status of the RCV
        enum:
          - no_assertion_provided
          - no_assertion_criteria_provided
          - criteria_provided_single_submitter
          - criteria_provided_multiple_submitters_no_conflicts
          - criteria_provided_conflicting_interpretations
          - reviewed_by_expert_panel
          - practice_guideline
      disease_names:
        type: array
        description: >-
          Each RCV record is associated with one or more preferred disease names
        items:
          type: string
          format: unicode
      clinical_significances:
        type: array
        description: >-
          The signifiances of this allele in the context of this disease
        items:
          type: string
          format: ascii
          enum:
            - not_provided
            - pathogenic
            - likely_pathogenic
            - benign
            - likely_benign
            - drug_response
            - confers_sensitivity
            - risk_factor
            - association
            - protective
            - conflicting_interpretations_of_pathogenicity
            - uncertain_significance
            - affects
            - association_not_found
            - other
      disease_ids:
        type: array
        description: >-
          There are zero or more disease-ids per RCV
        items:
          $ref: '#/definitions/external_ref'
      origins:
        type: array
        description: >-
          The biological origins of the allele. Each SCV can have many values
          for this field and this reports their aggregate (taken from the RCV),
          with duplicates removed.
        items:
          type: string
          format: ascii
          enum:
            - unknown
            - germline
            - somatic
            - de_novo
            - inherited
            - maternal
            - paternal
            - uniparental
            - biparental
            - not_reported
            - tested_inconclusive
            - not_applicable
            - experimentally_generated
      collection_method:
        type: array
        description: >-
          How each SCV was collected.  Each SCV can have many values
          for this field and this reports their aggregate (taken from the RCV),
          with duplicates removed.
        items:
          type: string
          format: unicode
      citations:
        type: array
        description: >-
          Set of PubMed IDs (PMIDs) associated with this RCV
        items:
          type: integer
      gene_ids:
        type: array
        description: >-
          Set of ClinVar reported genes associated with this RCV
        items:
          type: string
          format: ascii

  external_ref:
    type: object
    required: [organization, accession]
    description: >-
      An organization outside of dbSNP will also accession variants and annotation.
      This object provides the name of that organization, and associated accession.
      The organization together with the accession provide a globally unique
      identifier.
    properties:
      organization:
        type: string
        format: unicode
        description: >-
          The name of the organization that has provided an accession.
      accession:
        type: string
        format: unicode
        description: >-
          The accession provided by the organization.

  error:
    type: object
    description: >-
      Description of a catastrophic failure
    required: [ error ]
    properties:
      error:
        type: object
        description: "Remember that these fields are all optional."
        properties:
          code:
            type: integer
            description: >-
              Represents the code for this error. This property value will
              represent the HTTP response code. If there are multiple errors,
              code will be the error code for the first error.
          message:
            type: string
            format: unicode
            description: >-
              A human readable message providing more details about the error.
              If there are multiple errors, message will be the message for the
              first error.
          errors:
            type: array
            description: >-
              Container for any additional information regarding the error.
              If the service returns multiple errors, each element in the
              errors array represents a different error.
            items:
              $ref: "#/definitions/detailed_error"

  detailed_error:
    type: object
    description: >-
      Description of a catastrophic failure
    required: [reason, message]
    properties:
      reason:
        type: string
        format: ascii
        description: >-
          Unique identifier for this error. Different from the error.code
          property in that this is not an http response code.
        enum:
          - Other
      message:
        type: string
        format: unicode
        description: >-
          A human readable message providing more details about the error.
          If there is only one error, this field will match error.message.

  spdi_success:
    type: object
    description: >-
      Successful response to a request for a single SPDI object
    required: [ data ]
    properties:
      data:
        $ref: "#/definitions/spdi"

  spdis_success:
    type: object
    description: >-
      Successful response to a request for a list of SPDI objects
    required: [ data ]
    properties:
      data:
        $ref: "#/definitions/spdis"

  rsids_success:
    type: object
    description: >-
      Successful response to a request for a list of RefSNP
      identification numbers
    required: [ data ]
    properties:
      data:
        $ref: "#/definitions/rsids"

  hgvs_success:
    type: object
    description: >-
      Successful response to a request for a single HGVS object
    required: [ data ]
    properties:
      data:
        $ref: "#/definitions/hgvs"

  vcf_fields_success:
    type: object
    description: >-
      Successful response to a request for a single vcf_fields object
    required: [ data ]
    properties:
      data:
        $ref: "#/definitions/vcf_fields"

  codon_aligned_transcript_change:
    type: object
    required: [ seq_id, position, deleted_sequence, inserted_sequence ]
    description: >-
      This reports the codon change and its position in SPDI notation
      when the variant is in a coding region. Then the position
      reported is the transcript position of the first nucleotide of
      the affected codons, not the variant allele itself which can
      occur at anywhere in those codons. For a non-coding transcript,
      this is just the allele change as mapped to the transcript.
    properties:
      seq_id:
        type: string
        format: ascii
        description: >-
          The RefSeq/Genbank Accession.Version for the reference sequence
        example: >-
          NC_000001.23
      position:
        type: integer
        description: >-
          The 0-based boundary position where the deletion starts. That
          is, position 0 starts the deletion immediately before
          the first nucleotide and position 1 starts the deletion
          between the first and second nucleotides.
      deleted_sequence:
        type: string
        format: ascii
        description: >-
          The IUPAC sequence of nucleotides/amino-acids to delete from the
          reference. This can be empty, which is how a pure insertion is
          represented.
      inserted_sequence:
        type: string
        format: ascii
        description: >-
          The IUPAC sequence of nucleotides/amino-acids to insert
          after perforing the deletion. Amino-acids use the
          single character encoding. All nucleotide codes including the
          ones for ambiguity are allowed.


  spdi:
    type: object
    required: [ seq_id, position, deleted_sequence, inserted_sequence ]
    description: >-
      A single contextual allele in SPDI notation. Contextual allele
      means that applying the Blossom Precision Correction Algorithm
      would leave the fields unchanged
    properties:
      seq_id:
        type: string
        format: ascii
        description: >-
          The RefSeq/Genbank Accession.Version for the reference sequence
        example: >-
          NC_000001.23
      position:
        type: integer
        description: >-
          The 0-based boundary position where the deletion starts. That
          is, position 0 starts the deletion immediately before
          the first nucleotide and position 1 starts the deletion
          between the first and second nucleotides.
      deleted_sequence:
        type: string
        format: ascii
        description: >-
          The IUPAC sequence of nucleotides/amino-acids to delete from the
          reference. This can be empty, which is how a pure insertion is
          represented.
      inserted_sequence:
        type: string
        format: ascii
        description: >-
          The IUPAC sequence of nucleotides/amino-acids to insert
          after perforing the deletion. Amino-acids use the
          single character encoding. All nucleotide codes including the
          ones for ambiguity are allowed.
      warnings:
        $ref: "#/definitions/warnings"

  spdis:
    type: object
    required: [ spdis ]
    description: >-
      A set of contextual alleles in SPDI notation. Order is
      not significant. There may be duplicates.
    properties:
      spdis:
        type: array
        items:
          $ref: '#/definitions/spdi'
      errors:
        $ref: "#/definitions/error"
      warnings:
        $ref: "#/definitions/warnings"

  hgvs_batch_success:
    type: object
    description: >-
      Successful response to a request for a batch of HGVSes
    required: [ data ]
    properties:
      data:
        $ref: "#/definitions/hgvs_batch"

  hgvs_batch:
    type: array
    description: >-
      An array of results, one for each input HGVS.  Each result is
      also an array, since each input HGVS may represent multiple
      alleles.
    items:
        $ref: '#/definitions/hgvs_batch_item'

  hgvs_batch_item:
    type: object
    required: [ hgvs, alleles ]
    description: >-
        The input HGVS paired with its of result collection, which has one
        item per allele.
    properties:
      hgvs:
        description: the input HGVS expression
        type: string
        format: hgvs
      alleles:
        description: one entry per contextual allele encompased by the HGVS
        $ref: "#/definitions/spdis"

  rsids:
    type: object
    required: [ rsids ]
    description: >-
      A set of RefSNP IDs. Order is not significant.
      There may be duplicates.
    properties:
      rsids:
        type: array
        items:
          type: integer
          description: RefSNP ID

  hgvs:
    type: object
    required: [ hgvs ]
    description: >-
      An allele in HGVS notation
    properties:
      hgvs:
        type: string
        format: ascii
      warnings:
        $ref: "#/definitions/warnings"

  vcf_fields:
    type: object
    required: [ chrom, pos, ref, alt ]
    description: >-
      The allele-description fields of a VCF entry. They are properly
      left-shifted and contain a padding nucleotide for del, ins, and
      indel type changes.
    properties:
      chrom:
        type: string
        format: ascii
        description: >-
          The RefSeq/Genbank Accession.Version for the reference
          sequence. Despite the name (taken from the VCF standard)
          this does not need to be a chromosome.
      pos:
        type: integer
        description: >-
          The 1-based position of the first nuclotide in the
          reference allele string on its sequence
      ref:
        type: string
        format: ascii
        description: >-
          The reference allele, with padding nucleotide when required.
      alt:
        type: string
        format: ascii
        description: >-
          Alternate allele, with padding nucleotide when required.
      warnings:
        $ref: "#/definitions/warnings"

  warnings:
    type: array
    description: >-
      Text intended for human consumption listing all
      warnings associated with generating this object. Absent
      if no warnings were generated.
    items:
      $ref: '#/definitions/warning'

  warning:
    type: object
    description: >-
      An entry in the array of warnings.
    required: [reason, message]
    properties:
      reason:
        type: string
        format: ascii
        description: >-
          Unique identifier for this warning.
        enum:
          - Other
      message:
        type: string
        format: unicode
        description: >-
          The human-readable text of the warning.
